package com.adobe.washuhci.interactivehist.timeline {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;		public class HistoryTimeline extends Container {				private var _timeLabels:Array = new Array();		private var _timeResolution:Number = 10;				private var ORIGINAL_WIDTH:Number = 400;		private var PADDING:Number = 25;				private var _zoomInBtn:MovieClip;		private var _zoomOutBtn:MovieClip;				// embed?		private var _slider:TimelineSlider;				// _slider		// zoominbtn		// zoomoutbtn				public function HistoryTimeline() {			super();						init();			trace("HistoryTimeline: created");		}				public function init():void {			_zoomInBtn = this.getChildByName("zoomInBtn") as MovieClip;			_zoomOutBtn = this.getChildByName("zoomOutBtn") as MovieClip;			_slider = this.getChildByName("slider") as TimelineSlider;						// what do we do here?			_zoomInBtn.addEventListener(MouseEvent.MOUSE_DOWN, zoomHandler);			_zoomOutBtn.addEventListener(MouseEvent.MOUSE_DOWN, zoomHandler);						stage.addEventListener(Event.RESIZE, resizeHandler);						_slider.addMarker("Test number 1",-3000);			_slider.addMarker("Test 2", -230);		}				public function zoomHandler(me:MouseEvent):void {			if(me.target == _zoomInBtn) {				_slider.zoomIn();			} else _slider.zoomOut();		}				public function resizeHandler(e:Event):void {			trace("RESIZED");			_slider.bg.width = stage.stageWidth;			_slider.x = Math.round((ORIGINAL_WIDTH - stage.stageWidth)/2);			_slider.resizeHandler(); // redraw labels			_zoomInBtn.x = stage.stageWidth + ((ORIGINAL_WIDTH - stage.stageWidth)/2) - PADDING;			_zoomOutBtn.x = stage.stageWidth + ((ORIGINAL_WIDTH - stage.stageWidth)/2) - PADDING;		}				public function get time():Number {			return _slider.time;		}	}	}